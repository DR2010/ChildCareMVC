@using System.Activities.Expressions
@model FCMMySQLBusinessLibrary.ReportMetadata

@{
    ViewBag.Title = "ReportMetadataEdit";
}

<h2>Report Metadata Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Report Metadata</legend>
        <table width="100%" style="border: none">
            <tr>
                <td style="border: none"    >    
                    <div class="editor-label">
                        @Html.LabelFor(model => model.UID)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.UID, new { @readonly = true, style = "width:100px;" })
                        @Html.ValidationMessageFor(model => model.UID)
                    </div>
                </td>
                <td style="border: none">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecordType)
                    </div>
                    <div class="editor-field">
                        @* @Html.TextBoxFor(model => model.RecordType, new { maxlength = "2", style = "width:100px;" }) *@
                        @Html.DropDownList("RecordTypeListValues", new SelectList(Model.RecordTypeListValues))
                        @Html.ValidationMessageFor(model => model.RecordType)
                    </div>
                </td>
                <td style="border: none">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FieldCode)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.FieldCode, new { maxlength = "20", style = "width:200px;" })
                        @Html.ValidationMessageFor(model => model.FieldCode)
                    </div>              
                </td>
            </tr>
            <tr>
                <td style="border: none">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ClientType)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.ClientType, new { maxlength = "10", style = "width:100px;" })
                        @Html.ValidationMessageFor(model => model.ClientType)
                    </div>          
                </td>
                <td style="border: none">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ClientUID)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.ClientUID)
                        @Html.ValidationMessageFor(model => model.ClientUID)
                    </div>                  
                </td>
                <td style="border: none">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Description)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Description)
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>         
                </td>
            </tr>
        </table>

        <div class="editor-label">
            @Html.LabelFor(model => model.InformationType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InformationType)
            @Html.ValidationMessageFor(model => model.InformationType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TableName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TableName)
            @Html.ValidationMessageFor(model => model.TableName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FieldName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FieldName)
            @Html.ValidationMessageFor(model => model.FieldName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FilePath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FilePath)
            @Html.ValidationMessageFor(model => model.FilePath)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FileName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FileName)
            @Html.ValidationMessageFor(model => model.FileName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Condition)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Condition, new { maxlength = "200", style = "width:600px;" })
            @Html.ValidationMessageFor(model => model.Condition)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompareWith)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompareWith)
            @Html.ValidationMessageFor(model => model.CompareWith)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UseAsLabel)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UseAsLabel)
            @Html.ValidationMessageFor(model => model.UseAsLabel)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
